/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: message.proto */

#ifndef PROTOBUF_C_message_2eproto__INCLUDED
#define PROTOBUF_C_message_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Sensor Sensor;
typedef struct _Sensors Sensors;


/* --- enums --- */


/* --- messages --- */

struct  _Sensor
{
  ProtobufCMessage base;
  char *name;
  protobuf_c_boolean has_value;
  float value;
  char *unit;
  protobuf_c_boolean has_status;
  protobuf_c_boolean status;
};
#define SENSOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sensor__descriptor) \
    , NULL, 0,0, NULL, 0,0 }


struct  _Sensors
{
  ProtobufCMessage base;
  char *id;
  size_t n_sensors;
  Sensor **sensors;
};
#define SENSORS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sensors__descriptor) \
    , NULL, 0,NULL }


/* Sensor methods */
void   sensor__init
                     (Sensor         *message);
size_t sensor__get_packed_size
                     (const Sensor   *message);
size_t sensor__pack
                     (const Sensor   *message,
                      uint8_t             *out);
size_t sensor__pack_to_buffer
                     (const Sensor   *message,
                      ProtobufCBuffer     *buffer);
Sensor *
       sensor__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sensor__free_unpacked
                     (Sensor *message,
                      ProtobufCAllocator *allocator);
/* Sensors methods */
void   sensors__init
                     (Sensors         *message);
size_t sensors__get_packed_size
                     (const Sensors   *message);
size_t sensors__pack
                     (const Sensors   *message,
                      uint8_t             *out);
size_t sensors__pack_to_buffer
                     (const Sensors   *message,
                      ProtobufCBuffer     *buffer);
Sensors *
       sensors__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sensors__free_unpacked
                     (Sensors *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Sensor_Closure)
                 (const Sensor *message,
                  void *closure_data);
typedef void (*Sensors_Closure)
                 (const Sensors *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor sensor__descriptor;
extern const ProtobufCMessageDescriptor sensors__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_message_2eproto__INCLUDED */
